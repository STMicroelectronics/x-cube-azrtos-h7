/**************************************************************************/
/*                                                                        */
/*       Copyright (c) Microsoft Corporation. All rights reserved.        */
/*                                                                        */
/*       This software is licensed under the Microsoft Software License   */
/*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
/*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
/*       and in the root directory of this software.                      */
/*                                                                        */
/**************************************************************************/


/**************************************************************************/
/**************************************************************************/
/**                                                                       */
/** ThreadX Component                                                     */
/**                                                                       */
/**   Module Manager                                                      */
/**                                                                       */
/**************************************************************************/
/**************************************************************************/

#define TX_SOURCE_CODE

#include "tx_api.h"
<<<<<<< HEAD
<<<<<<< HEAD:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_alignment_adjust.c
#include "txm_module.h"

=======
#include "tx_thread.h"
#include "txm_module.h"


/* Define the user's fault notification callback function pointer.  This is
   setup via the txm_module_manager_memory_fault_notify API.  */

VOID    (*_txm_module_manager_fault_notify)(TX_THREAD *, TXM_MODULE_INSTANCE *);


/* Define a macro that can be used to allocate global variables useful to
   store information about the last fault. This macro is defined in
   txm_module_port.h and is usually populated in the assembly language
   fault handling prior to the code calling _txm_module_manager_memory_fault_handler.  */

TXM_MODULE_MANAGER_FAULT_INFO

>>>>>>> usbx_app_github_dev:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_memory_fault_handler.c
=======
#include "txm_module.h"

>>>>>>> usbx_app_github_dev

/**************************************************************************/
/*                                                                        */
/*  FUNCTION                                               RELEASE        */
/*                                                                        */
<<<<<<< HEAD
<<<<<<< HEAD:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_alignment_adjust.c
/*    _txm_module_manager_alignment_adjust            Cortex-A7/MMU/GNU   */
/*                                                           6.x          */
=======
/*    _txm_module_manager_memory_fault_handler        Cortex-A7/MMU/GNU   */
/*                                                           6.2.1        */
>>>>>>> usbx_app_github_dev:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_memory_fault_handler.c
=======
/*    _txm_module_manager_alignment_adjust            Cortex-A7/MMU/GNU   */
/*                                                           6.2.1        */
>>>>>>> usbx_app_github_dev
/*  AUTHOR                                                                */
/*                                                                        */
/*    Scott Larson, Microsoft Corporation                                 */
/*                                                                        */
/*  DESCRIPTION                                                           */
/*                                                                        */
<<<<<<< HEAD
<<<<<<< HEAD:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_alignment_adjust.c
=======
>>>>>>> usbx_app_github_dev
/*    This function adjusts the alignment and size of the code and data   */
/*    section for a given module implementation.                          */
/*                                                                        */
/*  INPUT                                                                 */
/*                                                                        */
/*    module_preamble                   Pointer to module preamble        */
/*    code_size                         Size of the code area (updated)   */
/*    code_alignment                    Code area alignment (updated)     */
/*    data_size                         Size of data area (updated)       */
/*    data_alignment                    Data area alignment (updated)     */
<<<<<<< HEAD
=======
/*    This function handles a fault associated with a memory protected    */
/*    module.                                                             */
/*                                                                        */
/*  INPUT                                                                 */
/*                                                                        */
/*    None                                                                */
>>>>>>> usbx_app_github_dev:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_memory_fault_handler.c
=======
>>>>>>> usbx_app_github_dev
/*                                                                        */
/*  OUTPUT                                                                */
/*                                                                        */
/*    None                                                                */
/*                                                                        */
/*  CALLS                                                                 */
/*                                                                        */
<<<<<<< HEAD
<<<<<<< HEAD:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_alignment_adjust.c
=======
>>>>>>> usbx_app_github_dev
/*    None                                                                */
/*                                                                        */
/*  CALLED BY                                                             */
/*                                                                        */
/*    Initial thread stack frame                                          */
<<<<<<< HEAD
=======
/*    _tx_thread_terminate                  Terminate thread              */
/*                                                                        */
/*  CALLED BY                                                             */
/*                                                                        */
/*    Fault handler                                                       */
>>>>>>> usbx_app_github_dev:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_memory_fault_handler.c
=======
>>>>>>> usbx_app_github_dev
/*                                                                        */
/*  RELEASE HISTORY                                                       */
/*                                                                        */
/*    DATE              NAME                      DESCRIPTION             */
/*                                                                        */
<<<<<<< HEAD
<<<<<<< HEAD:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_alignment_adjust.c
/*  xx-xx-xxxx      Scott Larson            Initial Version 6.x           */
=======
/*  03-08-2023      Scott Larson            Initial Version 6.2.1         */
>>>>>>> usbx_app_github_dev
/*                                                                        */
/**************************************************************************/
VOID  _txm_module_manager_alignment_adjust(TXM_MODULE_PREAMBLE *module_preamble, ULONG *code_size, ULONG *code_alignment, ULONG *data_size, ULONG *data_alignment)
{

ULONG   local_code_size;
ULONG   local_code_alignment;
ULONG   local_data_size;
ULONG   local_data_alignment;


    /* Copy the input parameters into local variables for ease of use.  */
    local_code_size =       *code_size;
    local_code_alignment =  TXM_MODULE_MEMORY_ALIGNMENT;
    local_data_size =       *data_size;
    local_data_alignment =  TXM_MODULE_MEMORY_ALIGNMENT;

    /* Return all the information to the caller.  */
    *code_size =        ((local_code_size + TXM_MODULE_MEMORY_ALIGNMENT - 1)/TXM_MODULE_MEMORY_ALIGNMENT) * TXM_MODULE_MEMORY_ALIGNMENT;
    *code_alignment =   local_code_alignment;
    *data_size =        ((local_data_size + TXM_MODULE_MEMORY_ALIGNMENT - 1)/TXM_MODULE_MEMORY_ALIGNMENT) * TXM_MODULE_MEMORY_ALIGNMENT;
    *data_alignment =   local_data_alignment;
<<<<<<< HEAD
=======
/*  03-08-2023      Scott Larson            Initial Version 6.2.1         */
/*                                                                        */
/**************************************************************************/
VOID  _txm_module_manager_memory_fault_handler(VOID)
{

TXM_MODULE_INSTANCE     *module_instance_ptr;
TX_THREAD               *thread_ptr;


    /* Pickup the current thread.  */
    thread_ptr =  _tx_thread_current_ptr;

    /* Initialize the module instance pointer to NULL.  */
    module_instance_ptr =  TX_NULL;

    /* Is there a thread?  */
    if (thread_ptr)
    {
        /* Pickup the module instance.  */
        module_instance_ptr =  thread_ptr -> tx_thread_module_instance_ptr;

        /* Terminate the current thread.  */
        _tx_thread_terminate(_tx_thread_current_ptr);
    }

    /* Determine if there is a user memory fault notification callback.  */
    if (_txm_module_manager_fault_notify)
    {
        /* Yes, call the user's notification memory fault callback.  */
        (_txm_module_manager_fault_notify)(thread_ptr, module_instance_ptr);
    }
>>>>>>> usbx_app_github_dev:Middlewares/ST/threadx/ports_module/cortex_a7/gnu/module_manager/src/txm_module_manager_memory_fault_handler.c
=======
>>>>>>> usbx_app_github_dev
}
